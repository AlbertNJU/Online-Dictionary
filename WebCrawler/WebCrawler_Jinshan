package Jinshan;

import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

import java.io.IOException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class WebCrawler_Jinshan {
    public static void main(String[] args) throws IOException {
        CloseableHttpClient httpClient = HttpClients.createDefault();

        System.out.print("请输入你要查的单词:");
        Scanner input = new Scanner(System.in);
        String word = input.nextLine();
        word = word.replaceAll(" ","+");

        //根据查找单词构造查找地址
        HttpGet getWordMean = new HttpGet("http://www.iciba.com/" + word);
       
        //取得返回的网页源码
        CloseableHttpResponse response = httpClient.execute(getWordMean);

        String result = EntityUtils.toString(response.getEntity());//获得应答报文
        response.close();
        
        //注意(?s)，意思是让'.'匹配换行符，默认情况下不匹配
        Pattern searchMeanPattern = Pattern.compile("(?s)<ul class=\"base-list switch_part\" class=\"\">(.*?)</ul>");
        Matcher m1 = searchMeanPattern.matcher(result); //m1是获取包含翻译的整个<ul>的

        if (m1.find()) {
        	
        	System.out.println("Find >> ");
        	
        	// imp: 将 \n 换为空格 否则读不出来
        	String means = m1.group(1).trim().replace('\n', ' ');
        	
        	//提一个词性以及其解释的块
        	Pattern getTrans = Pattern.compile("<li class=\"clearfix\">\\s*<span class=\"prop\">(.*?)</span>\\s*<p>(.*?)</p>\\s*</li>");
        	Matcher m2 = getTrans.matcher(means);
        	        	        	
        	while(m2.find()) {
        		String prop = m2.group(1);
        		String meaningList = m2.group(2);
        		
        		Pattern extractMeaning = Pattern.compile("<span>(.*?)</span>");
        		Matcher m3 = extractMeaning.matcher(meaningList);
        		System.out.print("\t" + prop + "\t");
        		while(m3.find()) {
        			System.out.print(m3.group(1) + " ");
        		}
        		System.out.println();
        		
        	}
        	
        
        }else {
        	System.out.println("爬取释义失败");
            System.exit(0);
        }
    }
}
